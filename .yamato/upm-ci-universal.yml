editors:
  - version: 2019.3
platforms:
  - name: Windows64
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
    flavor: m1.large
  - name: OSX
    type: Unity::metal::macmini
    image: slough-ops/macos-10.14-xcode
    flavor: m1.mac
testplatforms:
  - name: Standalone
    args: --suite=playmode --platform=Standalone
  - name: playmode
    args: --suite=playmode
  - name: editmode
    args: --suite=editor --platform=editmode
projects:
  - name: Universal
    folder: UniversalGraphicsTest
    packagename: com.unity.render-pipelines.universal
---
{% for project in projects %}
{% for editor in editors %}
{% for platform in platforms %}
{% for testplatform in testplatforms %}
{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}:
  name : Build and Test {{ project.name }} on {{ platform.name }}_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    {% if testplatform.name == "editmode" and platform.name == "Windows64" %}
    type: Unity::VM
    {% else %}
    type: {{ platform.type }}
    {% endif %}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  commands:
    #- npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
    # {% if platform.name == "OSX" %}
    # - brew install python
    # - /usr/local/bin/brew install pip
    # {% endif %}
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install --user unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple'"
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r ../ScriptableRenderPipeline/ bokken@$BOKKEN_DEVICE_IP:~/ScriptableRenderPipeline
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
    #- ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'ssh-agent bash -c 'ssh-add ~/.ssh/id_rsa_macmini; git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr''
    #- scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r ../ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr bokken@$BOKKEN_DEVICE_IP:~/utr
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP '/Users/bokken/Library/Python/3.7/bin/unity-downloader-cli -u {{ editor.version }} -c editor --wait --published'
    {% if testplatform.name == "Standalone" %}
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ./utr/utr {{ testplatform.args }}{{ platform.name }} --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=upm-ci~/test-results'
    {% else %}
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr/utr {{ testplatform.args }} --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results' >> /Users/builduser/build/output/Unity-Technologies/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/TestRunnerLog.txt
    {% endif %}
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results/ /Users/builduser/build/output/Unity-Technologies/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results/
  artifacts:
    logs:
      paths:
        - "**/test-results/**/*"       
{% endfor %}
{% endfor %}
{% endfor %}

{% for editor in editors %}
{{ project.packagename }}_{{ editor.version }}:
  name: Pack and Test {{ project.packagename }} version {{ editor.version }}
  agent:
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: m1.large
  commands:
   - npm install git+ssh://git@gitlab.cds.internal.unity3d.com:upm-packages/project-templates/upm-template-utils.git#performance-package -g --no-progress
   - cd {{ project.packagename }} && upm-ci package pack
   - cd {{ project.packagename }} && upm-ci package test --unity-version {{ editor.version }}
  dependencies:
  - .yamato/upm-ci-shadergraph.yml#com.unity.shadergraph_{{ editor.version }}
  - .yamato/upm-ci-core.yml#com.unity.render-pipelines.core_{{ editor.version }}
  artifacts:
    logs.zip:
      paths:
      - "**/upm-ci~/test-results/**/*"
      - "**/upm-ci~/packages/**/*.tgz"
{% endfor %}

All_{{ project.name }}:
  name: All {{ project.name }} CI
  agent:
    name: whatever
    type: Unity::VM
    image: cds-ops/ubuntu-18.04-agent:latest
    flavor: b1.small
  commands:
    - dir
  dependencies:
  {% for editor in editors %}
  {% for platform in platforms %}
  {% for testplatform in testplatforms %}
    - .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}
  {% endfor %}
  {% endfor %}
  {% endfor %}
  
{% endfor %}